<?php
// $Id$

/**
 * @file 
 * Asset Embed Module
 *
 * This module allows you to use embed code form various sites as assets. Each
 * provider is specified by an .inc file in the providers folder.
 * 
 */

/**
 * Invoke a provider method.
 */
function asset_embed_invoke(){
  $args = func_get_args();
  $provider = array_shift($args);
  $hook = array_shift($args);
  
  $function = 'asset_embed_' . $provider . '_' . $hook;
  if(function_exists($function)){
    return call_user_func_array($function, $args);
  }
  
  return false;  
}

/**
 * return a list of available providers
 * 
 * @param $all
 *   Should all providers be returned or just the enabled ones.
 * @return
 *   The array of availabe providers
 */
function asset_embed_load_providers($all = FALSE){
  static $providers = NULL;
  
  if($providers){
    return $providers;
  }
    
  $path = drupal_get_path('module', 'asset_embed') . '/providers';
  $files = drupal_system_listing('.*\.inc$', $path, 'name', 0);
  
  foreach ($files as $file) {
    if($all || variable_get('asset_embed_'.$file->name.'_enabled', 1)){
      require_once ("./$file->filename");
      $info = asset_embed_invoke($file->name, 'info');
      $providers[$file->name] = $info['name'] ? $info['name'] : $file->name;
    }
  }
  
  return $providers;
}

function asset_embed_extract_id($provider, $text){
  $info = asset_embed_invoke($provider, 'extract_id', $text);
  if(!$info){
    return FALSE;
  }
  $info['provider'] = $provider;
  return $info;
}

function asset_embed_asset_settings(){
  $providers = asset_embed_load_providers(TRUE);
  if(is_array($providers)){
    foreach($providers as $provider => $name){
      $form[$provider] = array(
        '#type' => 'fieldset',
        '#collapsible' => TRUE,
        '#collapsed' => ! variable_get('asset_embed_'.$provider.'_enabled', 1),
        '#title' => $name,
        '#tree' => FALSE,
      );
      $form[$provider]['asset_embed_'.$provider.'_enabled'] = array(
        '#type' => 'checkbox',
        '#title' => t('Enabled'),
        '#default_value' => variable_get('asset_embed_'.$provider.'_enabled', 1),
        '#return_value' => 1,
      );
      $form[$provider] = array_merge($form[$provider], (array)asset_embed_invoke($provider, 'settings'));
    }
  }else{
    $form[] = array('#value' => t('No Providers Available'));
  }

  return system_settings_form($form);
}

function asset_embed_asset_type($op = 'info', $asset = NULL){
  asset_embed_load_providers();
  switch($op){
    case 'info':
      return array(
        'embed' => array(
          'name' => t('Embed'),
          'module' => 'asset_embed',
          'description' => t('Embed content from 3rd party sites like YouTube.'),
        ),
      );
    case 'form':
      $form['provider'] = array(
        '#type' => 'select',
        '#title' => t('Provider'),
        '#options' => asset_embed_load_providers(),
        '#default_value' => $asset->provider,
      );
      $form['embed'] = array(
        '#type' => 'textarea',
        '#title' => t('Embed Code'),
        '#rows' => 3,
        '#default_value' => $asset->embed,
      );
      return $form;
    case 'validate':
      if(!asset_embed_extract_id($asset->provider, $asset->embed)){
        form_set_error('embed','Error extracting video ID.</em>');
      }
      break;
    case 'insert':
      $data = asset_embed_extract_id($asset->provider, $asset->embed);
      db_query('INSERT INTO {asset_embed} (aid, data) VALUES (%d, "%s")', $asset->aid, serialize($data));
      break;
    case 'update':
      $data = asset_embed_extract_id($asset->provider, $asset->embed);
      db_query('UPDATE {asset_embed} SET data="%s" WHERE aid=%d', serialize($data), $asset->aid);
      break;
    case 'load':
      $data = unserialize(db_result(db_query('SELECT data FROM {asset_embed} WHERE aid=%d',$asset->aid)));
      return array('embed' => $data);
    case 'view':
      return asset_render($asset, 'fullsize');
    case 'icon':
    case 'img':
      return asset_embed_invoke($asset->embed['provider'], 'thumbnail_src', $asset);
  }
      
}

function asset_embed_asset_formatter($op='info',$asset=null,$attr=array()){
  $providers = asset_embed_load_providers();
  switch($op){          
    case 'info':
      if($asset->type == 'embed'){
        $formats['fullsize'] = array(
          'name' => 'Full-Size Embed',
          'description' => t('Display the full-size version of the embedded content.'),
          'module' => 'asset_embed',
        );
        $formats['thumbnail'] = array(
          'name' => 'Thumbnail Embed',
          'description' => t('Display a thumbnail preview image of the embedded content.'),
          'module' => 'asset_embed',
        );
        return $formats;
      }
      break;
    case 'img':
      return asset_embed_invoke($asset->embed['provider'], 'thumbnail_src', $asset, $attr);
      break;
    case 'render':
      $function = 'asset_embed_'. $asset->embed['provider'] .'_'. $attr['format'];
      return theme($function, $asset, $attr);
      break;
    case 'form':
    default:
      $function = 'asset_embed_'. $asset->embed['provider'] .'_'. $op;
      if(function_exists($function)){
        return call_user_func($function, $asset, $attr);
      }
      break;      
  }
}

function theme_asset_embed_thumbnail($asset){
  $id = $asset->embed['id'];
  $url = "http://img.youtube.com/vi/$id/2.jpg";
  $alt = $title = $asset->title;
  $img = '<img src="'. check_url($url) .'" alt="'. check_plain($alt) .'" title="'. check_plain($title) .'" />';      
  return $img;
}

function theme_asset_embed_fullsize($asset, $attr = array()){
  $id = $asset->embed['id'];
  
  return '<object width="'.$attr['width'].'" height="'.$attr['height'].'">'
       . '<param name="movie" value="http://www.youtube.com/v/'.$id.'"></param>'
       . '<param name="wmode" value="transparent"></param>'
       . '<embed src="http://www.youtube.com/v/'.$id.'" type="application/x-shockwave-flash" '
       . 'wmode="transparent" width="'.$attr['width'].'" height="'.$attr['height'].'">'
       . '</embed></object>';
}

